import React, { useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import EventCard from '../components/EventCard';
import type { EventItem } from '../types/events';
import './EventsByType.css';
import olympiada from '../img/olimp.png';
import konkurs from '../img/kon.png';
import stazh from '../img/ctazh.png';
import vacancy from '../img/pabota.png';
import event from '../img/cob.png';

interface EventsByTypeProps {
    type: string;
    events: EventItem[];
    onBack: () => void;
}

function EventsByType({ type, events, onBack }: EventsByTypeProps) {
    const navigate = useNavigate();
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ "–Ω–∞–∑–∞–¥"
    useEffect(() => {
        const handleBackButton = (event: Event) => {
            event.preventDefault();
            onBack(); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω "–≤—Å–µ –∏–≤–µ–Ω—Ç—ã"
        };

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –Ω–∞—Ç–∏–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏ "–Ω–∞–∑–∞–¥"
        window.addEventListener('popstate', handleBackButton);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏—é, —á—Ç–æ–±—ã –∫–Ω–æ–ø–∫–∞ "–Ω–∞–∑–∞–¥" —Ä–∞–±–æ—Ç–∞–ª–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ
        window.history.pushState(null, '', window.location.pathname);

        return () => {
            window.removeEventListener('popstate', handleBackButton);
        };
    }, [onBack]);

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ –ø–æ —Ç–∏–ø—É
    const getGradientStyle = (eventType: string): React.CSSProperties => {
        const gradients: Record<string, string> = {
            '–°–æ–±—ã—Ç–∏—è': 'linear-gradient(180deg, #0099FF, #FFFFFF)',
            '–û–ª–∏–º–ø–∏–∞–¥–∞': 'linear-gradient(180deg, #FF9500, #FFBD61)',
            '–ö–æ–Ω–∫—É—Ä—Å': 'linear-gradient(180deg, #7378FF, #ACAFFF)',
            '–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞': 'linear-gradient(180deg, #787878, #161616)',
            '–í–∞–∫–∞–Ω—Å–∏—è': 'linear-gradient(135deg, #87C0FF, #007AFF)',
        };
        
        return {
            backgroundImage: gradients[eventType] || 'linear-gradient(135deg, #787878, #161616)'
        };
    };

    const headerStyle = getGradientStyle(type);

    // –ö–∞—Ä—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π/—Ñ–∏–≥—É—Ä –ø–æ —Ç–∏–ø–∞–º. –ó–∞–º–µ–Ω–∏—Ç–µ src –Ω–∞ —Å–≤–æ–∏ —Ñ–∞–π–ª—ã –≤ src/img
    const imageByType: Record<string, { src: string }> = {
        '–°–æ–±—ã—Ç–∏—è': { src: event },
        '–û–ª–∏–º–ø–∏–∞–¥–∞': { src: olympiada },
        '–ö–æ–Ω–∫—É—Ä—Å': { src: konkurs },
        '–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞': { src: stazh },
        '–í–∞–∫–∞–Ω—Å–∏—è': { src: vacancy },
    };

    const headerImage = imageByType[type]?.src || event;

    // –ö–ª–∞—Å—Å —Ñ–æ—Ä–º—ã –ø–æ —Ç–∏–ø—É
    const shapeClassByType: Record<string, string> = {
        '–°–æ–±—ã—Ç–∏—è': 'shape-events',
        '–û–ª–∏–º–ø–∏–∞–¥–∞': 'shape-olympiad',
        '–ö–æ–Ω–∫—É—Ä—Å': 'shape-contest',
        '–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞': 'shape-intern',
        '–í–∞–∫–∞–Ω—Å–∏—è': 'shape-vacancy',
    };
    const shapeClass = shapeClassByType[type] || 'shape-default';

    return (
        <div className="events-by-type-container">
            <div 
                className="events-header"
                style={headerStyle}
            >
                <div className="events-header-title">
                    <div className={`header-figure ${shapeClass}`}>
                        <div className="header-figure-blob" />
                        <img className="header-figure-photo" src={headerImage} alt={type} />
                    </div>
                    <div>
                        <h1>–†–∞–∑–¥–µ–ª</h1>
                        <h1 id='events-header-title-type'>{type}</h1>
                    </div>
                </div>    
            </div>

            {/* –°–ø–∏—Å–æ–∫ —Å–æ–±—ã—Ç–∏–π */}
            <div className="events-grid">
                {events.length > 0 ? (
                    events.map(event => (
                        <EventCard key={event.id} {...event} />
                    ))
                ) : (
                    <div className="no-events">
                        <p>–ù–µ—Ç —Å–æ–±—ã—Ç–∏–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "{type}"</p>
                    </div>
                )}
            </div>

            {/* –ù–∏–∂–Ω–µ–µ –º–µ–Ω—é */}
            <div className="bottom-nav">
                <div className="nav-item" onClick={() => navigate('/allEvents')}>
                    <span role="img" aria-label="events">üìÖ</span>
                    <div>–í—Å–µ –∏–≤–µ–Ω—Ç—ã</div>
                </div>
                <div className="nav-item" onClick={() => navigate('/my')}>
                    <span role="img" aria-label="my-events">üîî</span>
                    <div>–ú–æ–∏ –∏–≤–µ–Ω—Ç—ã</div>
                </div>
                <div className="nav-item" onClick={() => navigate('/account')}>
                    <span role="img" aria-label="account">üë§</span>
                    <div>–ê–∫–∫–∞—É–Ω—Ç</div>
                </div>
            </div>
        </div>
    );
}

export default EventsByType;